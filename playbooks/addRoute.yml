---
- name: Add Route To Ansible Host
  hosts: 10.49.5.209
  connection: local
  vars:
    interface: placeholder
    mask: placeholder
    destination: placeholder
    route_action: placeholder
    sshpass: "atomic"
    addoutput_internet:
      rc: 0
    addoutput_backup: 
      rc: 0
  gather_facts: false
  tasks:
#------------------------------- ADD ROUTE INTERNET TASK
    - name: Add Static Route to Internet
      when: route_action == "add" and interface == "10.10.2.254"
      register: addoutput_internet
      expect:
        #command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 'sudo route add -net "{{ destination }}" netmask "{{ mask }}" gw "{{ interface }}"'
        command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 'echo up route add -net "{{ destination }}" netmask "{{ mask }}" gw 10.10.2.254 dev ens4 | sudo tee -a /etc/network/interfaces'
        responses: 
          (?i)password: "{{ sshpass }}"
      ignore_errors: True
      no_log: True

    - name: Add Static Internet Route Error
      when: route_action == "add" and interface == "10.10.2.254" and addoutput_internet.rc != 0 
      fail:
        msg: 'ADD ROUTE FAILIED: "{{ addoutput_internet.stdout_lines }}"'

    - name: Print Add Output
      when: route_action == "add" and addoutput_internet.rc == 0
      debug: var=addoutput_internet.stdout_lines

#------------------------------- ADD ROUTE BACKUP TASK
    - name: Add Static Route to BackUp
      when: route_action == "add" and interface == "10.49.5.195"
      register: addoutput_backup
      expect:
        #command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 'sudo route add -net "{{ destination }}" netmask "{{ mask }}" gw "{{ interface }}"'
        command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 'echo up route add -net "{{ destination }}" netmask "{{ mask }}" gw 10.49.5.195 dev ens3 | sudo tee -a /etc/network/interfaces'
        responses: 
          (?i)password: "{{ sshpass }}"
      ignore_errors: True
      no_log: True

    - name: Add Static Backup Route Error
      when: route_action == "add" and interface == "10.49.5.195" and addoutput_backup.rc != 0
      fail:
        msg: 'ADD ROUTE FAILIED: "{{ addoutput_backup.stdout_lines }}"'

    - name: Print Add Output
      when: route_action == "add" and addoutput_backup.rc == 0
      debug: var=addoutput_backup.stdout_lines

#------------------------------- DELETE ROUTE TASK
    - name: Delete Static Route 
      when: route_action == "delete"
      register: deloutput
      expect:
        #command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 'sudo route del -net "{{ destination }}" netmask "{{ mask }}" gw "{{ interface }}"'
        command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 "sudo sed -i '/up route add -net {{ destination }} netmask {{ mask }} gw {{ interface }}/d' /etc/network/interfaces"
        responses: 
          (?i)password: "{{ sshpass }}"
      ignore_errors: True
      #no_log: True

    - name: Delete Static Route Error
      when: route_action == "delete" and deloutput.rc != 0
      fail:
        msg: 'DELETE ROUTE FAILIED: "{{ deloutput.stdout_lines }}"'

    - name: Print Del Output
      when: route_action == "delete" and deloutput.rc == 0
      debug: var=deloutput.stdout_lines

#------------------------------- LIST ROUTES TASK
    - name: List Static Routes 
      when: route_action == "list"
      register: listoutput
      expect:
        command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 'route -n && cat /etc/network/interfaces'
        responses: 
          (?i)password: "{{ sshpass }}"
      ignore_errors: True
      no_log: True

    - name: List Static Route Error
      when: route_action == "list" and listoutput.rc != 0
      fail:
        msg: 'LIST ROUTES FAILIED: "{{ listoutput.stdout_lines }}"'

    - name: Print List Output
      when: route_action == "list" and listoutput.rc == 0
      debug: var=listoutput.stdout_lines

#------------------------------- RESTART NETWORK SERVICE TASK
    - name: Restart Network Service
      when: route_action == "restart"
      register: restarttoutput
      expect:
        command: ssh -o StrictHostKeyChecking=no ubuntu@10.49.5.209 'sudo  /etc/init.d/networking restart'
        responses: 
          (?i)password: "{{ sshpass }}"
      ignore_errors: True
      no_log: Trueff

    - name: Restart Network Service Error
      when: route_action == "restart" and restarttoutput.rc != 0
      fail:
        msg: 'RESTART NETWORK SERVICE FAILIED: "{{ restarttoutput.stdout_lines }}"'

    - name: Print Restart Network Service Output
      when: route_action == "restart" and restarttoutput.rc == 0
      debug: var=restarttoutput.stdout_lines

# echo up route add -net 192.168.1.1 netmask 255.255.255.0 gw 10.10.2.254 dev ens4 | sudo tee -a /etc/network/interfaces
# sudo sed -i '/up route add -net 192.168.1.1 netmask 255.255.255.0 gw 10.10.2.254 dev ens4/d' /etc/network/interfaces